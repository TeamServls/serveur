ESX                  = nil

local LogAdmin       = ""
local LogAmbulance   = ""
local LogMecano      = ""
local LogPolice      = ""
local LogSheriff     = ""
local LogTaxi        = ""
local LogVehicleShop = ""

TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)

local logs = "https://discordapp.com/api/webhooks/717019919572533248/YKo6l2WqXbgvRFXC_KV_u9oXPGdUAjLtBIz49Pf_yU8bo9qhHl-47ID0eZwxyf2EIRoq"
local communityname = "PRL"
local communtiylogo = "" --Image
local banderas = {
    "ğŸ‡¦ğŸ‡¨", "Ascension Island", "ğŸ‡¦ğŸ‡©", "Andorra", "ğŸ‡¦ğŸ‡ª", "United Arab Emirates", "ğŸ‡¦ğŸ‡«", "Afghanistan", "ğŸ‡¦ğŸ‡¬", "Antigua & Barbuda", "ğŸ‡¦ğŸ‡®", "Anguilla", "ğŸ‡¦ğŸ‡±", "Albania", "ğŸ‡¦ğŸ‡²", "Armenia", "ğŸ‡¦ğŸ‡´", "Angola", "ğŸ‡¦ğŸ‡¶", "Antarctica", "ğŸ‡¦ğŸ‡·", "Argentina", "ğŸ‡¦ğŸ‡¸", "American Samoa", "ğŸ‡¦ğŸ‡¹", "Austria", "ğŸ‡¦ğŸ‡º", "Australia", "ğŸ‡¦ğŸ‡¼", "Aruba", "ğŸ‡¦ğŸ‡½", "Ã…land Islands", "ğŸ‡¦ğŸ‡¿", "Azerbaijan", "ğŸ‡§ğŸ‡¦", "Bosnia & Herzegovina", "ğŸ‡§ğŸ‡§", "Barbados", "ğŸ‡§ğŸ‡©", "Bangladesh", "ğŸ‡§ğŸ‡ª", "Belgium", "ğŸ‡§ğŸ‡«", "Burkina Faso", "ğŸ‡§ğŸ‡¬", "Bulgaria", "ğŸ‡§ğŸ‡­", "Bahrain", "ğŸ‡§ğŸ‡®", "Burundi", "ğŸ‡§ğŸ‡¯", "Benin", "ğŸ‡§ğŸ‡±", "St. BarthÃ©lemy", "ğŸ‡§ğŸ‡²", "Bermuda", "ğŸ‡§ğŸ‡³", "Brunei", "ğŸ‡§ğŸ‡´", "Bolivia", "ğŸ‡§ğŸ‡¶", "Caribbean Netherlands", "ğŸ‡§ğŸ‡·", "Brazil", "ğŸ‡§ğŸ‡¸", "Bahamas", "ğŸ‡§ğŸ‡¹", "Bhutan", "ğŸ‡§ğŸ‡»", "Bouvet Island", "ğŸ‡§ğŸ‡¼", "Botswana", "ğŸ‡§ğŸ‡¾", "Belarus", "ğŸ‡§ğŸ‡¿", "Belize", "ğŸ‡¨ğŸ‡¦", "Canada", "ğŸ‡¨ğŸ‡¨", "Cocos (Keeling) Islands", "ğŸ‡¨ğŸ‡©", "Congo - Kinshasa", "ğŸ‡¨ğŸ‡«", "Central African Republic", "ğŸ‡¨ğŸ‡¬", "Congo - Brazzaville", "ğŸ‡¨ğŸ‡­", "Switzerland", "ğŸ‡¨ğŸ‡®", "CÃ´te dâ€™Ivoire", "ğŸ‡¨ğŸ‡°", "Cook Islands", "ğŸ‡¨ğŸ‡±", "Chile", "ğŸ‡¨ğŸ‡²", "Cameroon", "ğŸ‡¨ğŸ‡³", "China", "ğŸ‡¨ğŸ‡´", "Colombia", "ğŸ‡¨ğŸ‡µ", "Clipperton Island", "ğŸ‡¨ğŸ‡·", "Costa Rica", "ğŸ‡¨ğŸ‡º", "Cuba", "ğŸ‡¨ğŸ‡»", "Cape Verde", "ğŸ‡¨ğŸ‡¼", "CuraÃ§ao", "ğŸ‡¨ğŸ‡½", "Christmas Island", "ğŸ‡¨ğŸ‡¾", "Cyprus", "ğŸ‡¨ğŸ‡¿", "Czechia", "ğŸ‡©ğŸ‡ª", "Germany", "ğŸ‡©ğŸ‡¬", "Diego Garcia", "ğŸ‡©ğŸ‡¯", "Djibouti", "ğŸ‡©ğŸ‡°", "Denmark", "ğŸ‡©ğŸ‡²", "Dominica", "ğŸ‡©ğŸ‡´", "Dominican Republic", "ğŸ‡©ğŸ‡¿", "Algeria", "ğŸ‡ªğŸ‡¦", "Ceuta & Melilla", "ğŸ‡ªğŸ‡¨", "Ecuador", "ğŸ‡ªğŸ‡ª", "Estonia", "ğŸ‡ªğŸ‡¬", "Egypt", "ğŸ‡ªğŸ‡­", "Western Sahara", "ğŸ‡ªğŸ‡·", "Eritrea", "ğŸ‡ªğŸ‡¸", "Spain", "ğŸ‡ªğŸ‡¹", "Ethiopia", "ğŸ‡ªğŸ‡º", "European Union", "ğŸ‡«ğŸ‡®", "Finland", "ğŸ‡«ğŸ‡¯", "Fiji", "ğŸ‡«ğŸ‡°", "Falkland Islands", "ğŸ‡«ğŸ‡²", "Micronesia", "ğŸ‡«ğŸ‡´", "Faroe Islands", "ğŸ‡«ğŸ‡·", "France", "ğŸ‡¬ğŸ‡¦", "Gabon", "ğŸ‡¬ğŸ‡§", "United Kingdom", "ğŸ‡¬ğŸ‡©", "Grenada", "ğŸ‡¬ğŸ‡ª", "Georgia", "ğŸ‡¬ğŸ‡«", "French Guiana", "ğŸ‡¬ğŸ‡¬", "Guernsey", "ğŸ‡¬ğŸ‡­", "Ghana", "ğŸ‡¬ğŸ‡®", "Gibraltar", "ğŸ‡¬ğŸ‡±", "Greenland", "ğŸ‡¬ğŸ‡²", "Gambia", "ğŸ‡¬ğŸ‡³", "Guinea", "ğŸ‡¬ğŸ‡µ", "Guadeloupe", "ğŸ‡¬ğŸ‡¶", "Equatorial Guinea", "ğŸ‡¬ğŸ‡·", "Greece", "ğŸ‡¬ğŸ‡¸", "South Georgia & South Sandwich Islands", "ğŸ‡¬ğŸ‡¹", "Guatemala", "ğŸ‡¬ğŸ‡º", "Guam", "ğŸ‡¬ğŸ‡¼", "Guinea-Bissau", "ğŸ‡¬ğŸ‡¾", "Guyana", "ğŸ‡­ğŸ‡°", "Hong Kong SAR China", "ğŸ‡­ğŸ‡²", "Heard & McDonald Islands", "ğŸ‡­ğŸ‡³", "Honduras", "ğŸ‡­ğŸ‡·", "Croatia", "ğŸ‡­ğŸ‡¹", "Haiti", "ğŸ‡­ğŸ‡º", "Hungary", "ğŸ‡®ğŸ‡¨", "Canary Islands", "ğŸ‡®ğŸ‡©", "Indonesia", "ğŸ‡®ğŸ‡ª", "Ireland", "ğŸ‡®ğŸ‡±", "Israel", "ğŸ‡®ğŸ‡²", "Isle of Man", "ğŸ‡®ğŸ‡³", "India", "ğŸ‡®ğŸ‡´", "British Indian Ocean Territory", "ğŸ‡®ğŸ‡¶", "Iraq", "ğŸ‡®ğŸ‡·", "Iran", "ğŸ‡®ğŸ‡¸", "Iceland", "ğŸ‡®ğŸ‡¹", "Italy", "ğŸ‡¯ğŸ‡ª", "Jersey", "ğŸ‡¯ğŸ‡²", "Jamaica", "ğŸ‡¯ğŸ‡´", "Jordan", "ğŸ‡¯ğŸ‡µ", "Japan", "ğŸ‡°ğŸ‡ª", "Kenya", "ğŸ‡°ğŸ‡¬", "Kyrgyzstan", "ğŸ‡°ğŸ‡­", "Cambodia", "ğŸ‡°ğŸ‡®", "Kiribati", "ğŸ‡°ğŸ‡²", "Comoros", "ğŸ‡°ğŸ‡³", "St. Kitts & Nevis", "ğŸ‡°ğŸ‡µ", "North Korea", "ğŸ‡°ğŸ‡·", "South Korea", "ğŸ‡°ğŸ‡¼", "Kuwait", "ğŸ‡°ğŸ‡¾", "Cayman Islands", "ğŸ‡°ğŸ‡¿", "Kazakhstan", "ğŸ‡±ğŸ‡¦", "Laos", "ğŸ‡±ğŸ‡§", "Lebanon", "ğŸ‡±ğŸ‡¨", "St. Lucia", "ğŸ‡±ğŸ‡®", "Liechtenstein", "ğŸ‡±ğŸ‡°", "Sri Lanka", "ğŸ‡±ğŸ‡·", "Liberia", "ğŸ‡±ğŸ‡¸", "Lesotho", "ğŸ‡±ğŸ‡¹", "Lithuania", "ğŸ‡±ğŸ‡º", "Luxembourg", "ğŸ‡±ğŸ‡»", "Latvia", "ğŸ‡±ğŸ‡¾", "Libya", "ğŸ‡²ğŸ‡¦", "Morocco", "ğŸ‡²ğŸ‡¨", "Monaco", "ğŸ‡²ğŸ‡©", "Moldova", "ğŸ‡²ğŸ‡ª", "Montenegro", "ğŸ‡²ğŸ‡«", "St. Martin", "ğŸ‡²ğŸ‡¬", "Madagascar", "ğŸ‡²ğŸ‡­", "Marshall Islands", "ğŸ‡²ğŸ‡°", "North Macedonia", "ğŸ‡²ğŸ‡±", "Mali", "ğŸ‡²ğŸ‡²", "Myanmar (Burma)", "ğŸ‡²ğŸ‡³", "Mongolia", "ğŸ‡²ğŸ‡´", "Macao Sar China", "ğŸ‡²ğŸ‡µ", "Northern Mariana Islands", "ğŸ‡²ğŸ‡¶", "Martinique", "ğŸ‡²ğŸ‡·", "Mauritania", "ğŸ‡²ğŸ‡¸", "Montserrat", "ğŸ‡²ğŸ‡¹", "Malta", "ğŸ‡²ğŸ‡º", "Mauritius", "ğŸ‡²ğŸ‡»", "Maldives", "ğŸ‡²ğŸ‡¼", "Malawi", "ğŸ‡²ğŸ‡½", "Mexico", "ğŸ‡²ğŸ‡¾", "Malaysia", "ğŸ‡²ğŸ‡¿", "Mozambique", "ğŸ‡³ğŸ‡¦", "Namibia", "ğŸ‡³ğŸ‡¨", "New Caledonia", "ğŸ‡³ğŸ‡ª", "Niger", "ğŸ‡³ğŸ‡«", "Norfolk Island", "ğŸ‡³ğŸ‡¬", "Nigeria", "ğŸ‡³ğŸ‡®", "Nicaragua", "ğŸ‡³ğŸ‡±", "Netherlands", "ğŸ‡³ğŸ‡´", "Norway", "ğŸ‡³ğŸ‡µ", "Nepal", "ğŸ‡³ğŸ‡·", "Nauru", "ğŸ‡³ğŸ‡º", "Niue", "ğŸ‡³ğŸ‡¿", "New Zealand", "ğŸ‡´ğŸ‡²", "Oman", "ğŸ‡µğŸ‡¦", "Panama", "ğŸ‡µğŸ‡ª", "Peru", "ğŸ‡µğŸ‡«", "French Polynesia", "ğŸ‡µğŸ‡¬", "Papua New Guinea", "ğŸ‡µğŸ‡­", "Philippines", "ğŸ‡µğŸ‡°", "Pakistan", "ğŸ‡µğŸ‡±", "Poland", "ğŸ‡µğŸ‡²", "St. Pierre & Miquelon", "ğŸ‡µğŸ‡³", "Pitcairn Islands", "ğŸ‡µğŸ‡·", "Puerto Rico", "ğŸ‡µğŸ‡¸", "Palestinian Territories", "ğŸ‡µğŸ‡¹", "Portugal", "ğŸ‡µğŸ‡¼", "Palau", "ğŸ‡µğŸ‡¾", "Paraguay", "ğŸ‡¶ğŸ‡¦", "Qatar", "ğŸ‡·ğŸ‡ª", "RÃ©union", "ğŸ‡·ğŸ‡´", "Romania", "ğŸ‡·ğŸ‡¸", "Serbia", "ğŸ‡·ğŸ‡º", "Russia", "ğŸ‡·ğŸ‡¼", "Rwanda", "ğŸ‡¸ğŸ‡¦", "Saudi Arabia", "ğŸ‡¸ğŸ‡§", "Solomon Islands", "ğŸ‡¸ğŸ‡¨", "Seychelles", "ğŸ‡¸ğŸ‡©", "Sudan", "ğŸ‡¸ğŸ‡ª", "Sweden", "ğŸ‡¸ğŸ‡¬", "Singapore", "ğŸ‡¸ğŸ‡­", "St. Helena", "ğŸ‡¸ğŸ‡®", "Slovenia", "ğŸ‡¸ğŸ‡¯", "Svalbard & Jan Mayen", "ğŸ‡¸ğŸ‡°", "Slovakia", "ğŸ‡¸ğŸ‡±", "Sierra Leone", "ğŸ‡¸ğŸ‡²", "San Marino", "ğŸ‡¸ğŸ‡³", "Senegal", "ğŸ‡¸ğŸ‡´", "Somalia", "ğŸ‡¸ğŸ‡·", "Suriname", "ğŸ‡¸ğŸ‡¸", "South Sudan", "ğŸ‡¸ğŸ‡¹", "SÃ£o TomÃ© & PrÃ­ncipe", "ğŸ‡¸ğŸ‡»", "El Salvador", "ğŸ‡¸ğŸ‡½", "Sint Maarten", "ğŸ‡¸ğŸ‡¾", "Syria", "ğŸ‡¸ğŸ‡¿", "Eswatini", "ğŸ‡¹ğŸ‡¦", "Tristan Da Cunha", "ğŸ‡¹ğŸ‡¨", "Turks & Caicos Islands", "ğŸ‡¹ğŸ‡©", "Chad", "ğŸ‡¹ğŸ‡«", "French Southern Territories", "ğŸ‡¹ğŸ‡¬", "Togo", "ğŸ‡¹ğŸ‡­", "Thailand", "ğŸ‡¹ğŸ‡¯", "Tajikistan", "ğŸ‡¹ğŸ‡°", "Tokelau", "ğŸ‡¹ğŸ‡±", "Timor-Leste", "ğŸ‡¹ğŸ‡²", "Turkmenistan", "ğŸ‡¹ğŸ‡³", "Tunisia", "ğŸ‡¹ğŸ‡´", "Tonga", "ğŸ‡¹ğŸ‡·", "Turkey", "ğŸ‡¹ğŸ‡¹", "Trinidad & Tobago", "ğŸ‡¹ğŸ‡»", "Tuvalu", "ğŸ‡¹ğŸ‡¼", "Taiwan", "ğŸ‡¹ğŸ‡¿", "Tanzania", "ğŸ‡ºğŸ‡¦", "Ukraine", "ğŸ‡ºğŸ‡¬", "Uganda", "ğŸ‡ºğŸ‡²", "U.S. Outlying Islands", "ğŸ‡ºğŸ‡³", "United Nations", "ğŸ‡ºğŸ‡¸", "United States", "ğŸ‡ºğŸ‡¾", "Uruguay", "ğŸ‡ºğŸ‡¿", "Uzbekistan", "ğŸ‡»ğŸ‡¦", "Vatican City", "ğŸ‡»ğŸ‡¨", "St. Vincent & Grenadines", "ğŸ‡»ğŸ‡ª", "Venezuela", "ğŸ‡»ğŸ‡¬", "British Virgin Islands", "ğŸ‡»ğŸ‡®", "U.S. Virgin Islands", "ğŸ‡»ğŸ‡³", "Vietnam", "ğŸ‡»ğŸ‡º", "Vanuatu", "ğŸ‡¼ğŸ‡«", "Wallis & Futuna", "ğŸ‡¼ğŸ‡¸", "Samoa", "ğŸ‡½ğŸ‡°", "Kosovo", "ğŸ‡¾ğŸ‡ª", "Yemen", "ğŸ‡¾ğŸ‡¹", "Mayotte", "ğŸ‡¿ğŸ‡¦", "South Africa", "ğŸ‡¿ğŸ‡²", "Zambia", "ğŸ‡¿ğŸ‡¼", "Zimbabwe"}

DiscordWebhookSystemInfos = 'https://discordapp.com/api/webhooks/717019919572533248/YKo6l2WqXbgvRFXC_KV_u9oXPGdUAjLtBIz49Pf_yU8bo9qhHl-47ID0eZwxyf2EIRoq'
DiscordWebhookKillinglogs = 'https://discordapp.com/api/webhooks/717022343565934643/AjdB1selbxDWwToEpy6oM7CTmGFiThsUBmEx10OAmcQ87QyP32MsiTMKzlquK_5poc7u'
DiscordWebhookChat = 'https://discordapp.com/api/webhooks/717022450025627718/jI7g3OC0z2_7GPmIzX1PA7-0qbVVBjmZcDSUUziIZ2oLBMTJt44xhCXuEedgtkCCOD5b'
DiscordWebHookAddInLog = 'https://discordapp.com/api/webhooks/717022597006622730/W4BjhZDa0SnGvDVyxgZzqdyHhLijMW_LRdZd0El0GuMWXrQnxCTRApC1Vfb9UNcGKUcf'
DiscordWebHook = ''

webhookmecano      = "https://discordapp.com/api/webhooks/717022597006622730/W4BjhZDa0SnGvDVyxgZzqdyHhLijMW_LRdZd0El0GuMWXrQnxCTRApC1Vfb9UNcGKUcf"

--DiscordServeurON = ''

OwnWebhookCommands = {
	{'/giveweapon', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
	{'/setjob', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
	{'/car', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
	{'/giveitem', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
	{'/kick', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
	{'/revive', 'https://discordapp.com/api/webhooks/717022671413706802/pCp_CHPDo6_Kqu_Jv3_h2s33sjotRB1MoMRWmRkBXHjeOb2gLTcXqnKTr7zpHCBD0MS2'},
}

-- Error Check
if DiscordWebhookSystemInfos == nil and DiscordWebhookKillinglogs == nil and DiscordWebhookChat == nil then
	local Content = LoadResourceFile(GetCurrentResourceName(), 'config.lua')
	Content = load(Content)
	Content()
end
if DiscordWebhookSystemInfos == 'WEBHOOK_LINK_HERE' then
	print('\n\nERROR\n' .. GetCurrentResourceName() .. ': Please add your "System Infos" webhook\n\n')
else
	PerformHttpRequest('https://discordapp.com/api/webhooks/717019919572533248/YKo6l2WqXbgvRFXC_KV_u9oXPGdUAjLtBIz49Pf_yU8bo9qhHl-47ID0eZwxyf2EIRoq', function(Error, Content, Head)
		if Content == '{"code": 50027, "message": "Invalid Webhook Token"}' then
			print('\n\nERROR\n' .. GetCurrentResourceName() .. ': "System Infos" webhook non-existing!\n\n')
		end
	end)
end
if DiscordWebhookKillinglogs == 'WEBHOOK_LINK_HERE' then
	print('\n\nERROR\n' .. GetCurrentResourceName() .. ': Please add your "Killing Log" webhook\n\n')
else
	PerformHttpRequest('https://discordapp.com/api/webhooks/717022343565934643/AjdB1selbxDWwToEpy6oM7CTmGFiThsUBmEx10OAmcQ87QyP32MsiTMKzlquK_5poc7u', function(Error, Content, Head)
		if Content == '{"code": 50027, "message": "Invalid Webhook Token"}' then
			print('\n\nERROR\n' .. GetCurrentResourceName() .. ': "Killing Log" webhook non-existing!\n\n')
		end
	end)
end
if DiscordWebhookChat == 'WEBHOOK_LINK_HERE' then
	print('\n\nERROR\n' .. GetCurrentResourceName() .. ': Please add your "Chat" webhook\n\n')
else
	PerformHttpRequest('https://discordapp.com/api/webhooks/717022450025627718/jI7g3OC0z2_7GPmIzX1PA7-0qbVVBjmZcDSUUziIZ2oLBMTJt44xhCXuEedgtkCCOD5b', function(Error, Content, Head)
		if Content == '{"code": 50027, "message": "Invalid Webhook Token"}' then
			print('\n\nERROR\n' .. GetCurrentResourceName() .. ': "Chat" webhook non-existing!\n\n')
		end
	end)
end
if DiscordWebHookAddInLog == 'WEBHOOK_LINK_HERE' then
	print('\n\nERROR\n' .. GetCurrentResourceName() .. ': Please add your "Chat" webhook\n\n')
else
	PerformHttpRequest('https://discordapp.com/api/webhooks/717022597006622730/W4BjhZDa0SnGvDVyxgZzqdyHhLijMW_LRdZd0El0GuMWXrQnxCTRApC1Vfb9UNcGKUcf', function(Error, Content, Head)
		if Content == '{"code": 50027, "message": "Invalid Webhook Token"}' then
			print('\n\nERROR\n' .. GetCurrentResourceName() .. ': "Chat" webhook non-existing!\n\n')
		end
	end)
end

-- Annonce sur serveur ON
-- System Infos
--PerformHttpRequest('https://discordapp.com/api/webhooks/646725619635322880/c-JAI6bsCBa6SISxeyPVii47DFh9q4wmxnXvqvgRiuFJyMMc95tKZ8EGE6lzseTDVFxb', function(Error, Content, Head) end, 'POST', json.encode({username = SystemName, content = '**FiveM server webhook started**'}), { ['Content-Type'] = 'application/json' })

--[[AddEventHandler('playerConnecting', function()
	TriggerEvent('DiscordBot:ToDiscord', DiscordWebhookSystemInfos, SystemName, '```diff\n+ ' .. GetPlayerName(source) .. ' c\'est connectÃ©e\n```', SystemAvatar, false)
	SendAllId(source)
end)

local WebInfo = "https://discordapp.com/api/webhooks/685100917053456407/U9_E8Yi36sWrP7fPC6JlUPNShAN0FWsUfQt2h4oT0ddU2NbI3NHPoiJgoGGryhu9M6NJ"
function SendAllId(s)
	local ids = GetPlayerIdentifiers(s)
	local msg = "**"..GetPlayerName(s).."**\n```"
	for _,v in pairs(ids) do
		msg = msg..v.."\n"
	end
	msg = msg.."```"
	PerformHttpRequest(WebInfo, function(Error, Content, Head) end, 'POST', json.encode({content = msg}), {['Content-Type'] = 'application/json'})
end

AddEventHandler('playerDropped', function(Reason)
	if source < 60000 then
		TriggerEvent('DiscordBot:ToDiscord', DiscordWebhookSystemInfos, SystemName, '```diff\n- ['..source..'] ' .. GetPlayerName(source) .. ' Ã  quittÃ© pour : (' .. Reason .. ')\n```', SystemAvatar, false)
	end
end)]]

function sendToDiscord_all(name, message, color, DiscordWebHook)

  local embeds = {
	  {
			["color"] = color,
        	["type"] = "rich",
        	["title"] = message,
        	["description"] = msg,
        	["footer"] = {
        	["text"] = 'PRL - LOG'
		},
	}
}
  
if message == nil or message == '' then return FALSE end
	PerformHttpRequest(DiscordWebHook, function(err, text, headers) end, 'POST', json.encode({ username = name, embeds = embeds}), { ['Content-Type'] = 'application/json' })
end

-- Killing Log
RegisterServerEvent('DiscordBot:playerDied')
AddEventHandler('DiscordBot:playerDied', function(Message, Weapon)
	local date = os.date('*t')
	
	if date.day < 10 then date.day = '0' .. tostring(date.day) end
	if date.month < 10 then date.month = '0' .. tostring(date.month) end
	if date.hour < 10 then date.hour = '0' .. tostring(date.hour) end
	if date.min < 10 then date.min = '0' .. tostring(date.min) end
	if date.sec < 10 then date.sec = '0' .. tostring(date.sec) end
	if Weapon then
		Message = Message .. ' [' .. Weapon .. ']'
	end
	TriggerEvent('DiscordBot:ToDiscord', DiscordWebhookKillinglogs, SystemName, Message .. '\n `' .. date.day .. '.' .. date.month .. '.' .. date.year .. ' - ' .. date.hour .. ':' .. date.min .. ':' .. date.sec .. '`', SystemAvatar, false)
end)

-- Chat
AddEventHandler('chatMessage', function(Source, Name, Message)
	local Webhook = DiscordWebhookChat; TTS = false

	--Removing Color Codes (^0, ^1, ^2 etc.) from the name and the message
	for i = 0, 9 do
		Message = Message:gsub('%^' .. i, '')
		Name = Name:gsub('%^' .. i, '')
	end
	
	--Splitting the message in multiple strings
	MessageSplitted = stringsplit(Message, ' ')
	
	--Checking if the message contains a blacklisted command
	if not IsCommand(MessageSplitted, 'Blacklisted') then
		--Checking if the message contains a command which has his own webhook
		if IsCommand(MessageSplitted, 'HavingOwnWebhook') then
			Webhook = GetOwnWebhook(MessageSplitted)
		end
		
		--Checking if the message contains a special command
		if IsCommand(MessageSplitted, 'Special') then
			MessageSplitted = ReplaceSpecialCommand(MessageSplitted)
		end
		
		---Checking if the message contains a command which belongs into a tts channel
		if IsCommand(MessageSplitted, 'TTS') then
			TTS = true
		end
		
		--Combining the message to one string again
		Message = ''
		
		for Key, Value in ipairs(MessageSplitted) do
			Message = Message .. Value .. ' '
		end
		
		--Adding the username if needed
		Message = Message:gsub('USERNAME_NEEDED_HERE', GetPlayerName(Source))
		
		--Adding the userid if needed
		Message = Message:gsub('USERID_NEEDED_HERE', Source)
		
		-- Shortens the Name, if needed
		if Name:len() > 23 then
			Name = Name:sub(1, 23)
		end

		--Getting the steam avatar if available
		local AvatarURL = UserAvatar
		if GetIDFromSource('steam', Source) then
			PerformHttpRequest('http://steamcommunity.com/profiles/' .. tonumber(GetIDFromSource('steam', Source), 16) .. '/?xml=1', function(Error, Content, Head)
				local SteamProfileSplitted = stringsplit(Content, '\n')
				for i, Line in ipairs(SteamProfileSplitted) do
					if Line:find('<avatarFull>') then
						AvatarURL = Line:gsub('	<avatarFull><!%[CDATA%[', ''):gsub(']]></avatarFull>', '')
						TriggerEvent('DiscordBot:ToDiscord', Webhook, Name .. ' [ID: ' .. Source .. ']', Message, AvatarURL, false, Source, TTS) --Sending the message to discord
						break
					end
				end
			end)
		else
			--Using the default avatar if no steam avatar is available
			TriggerEvent('DiscordBot:ToDiscord', Webhook, Name .. ' [ID: ' .. Source .. ']', Message, AvatarURL, false, Source, TTS) --Sending the message to discord
		end
	end
end)

--Event to actually send Messages to Discord
RegisterServerEvent('DiscordBot:ToDiscord')
AddEventHandler('DiscordBot:ToDiscord', function(WebHook, Name, Message, Image, External, Source, TTS)
	if Message == nil or Message == '' then
		return nil
	end
	if TTS == nil or TTS == '' then
		TTS = false
	end
	if External then
		if WebHook:lower() == 'chat' then
			WebHook = DiscordWebhookChat
		elseif WebHook:lower() == 'system' then
			WebHook = DiscordWebhookSystemInfos
		elseif WebHook:lower() == 'kill' then
			WebHook = DiscordWebhookKillinglogs
		elseif WebHook:lower() == 'vehicle' then
			WebHook = DiscordWebhookVehicle
		elseif not Webhook:find('discordapp.com/api/webhooks') then
			print('ToDiscord event called without a specified webhook!')
			return nil
		end
		
		if Image:lower() == 'steam' then
			Image = UserAvatar
			if GetIDFromSource('steam', Source) then
				PerformHttpRequest('http://steamcommunity.com/profiles/' .. tonumber(GetIDFromSource('steam', Source), 16) .. '/?xml=1', function(Error, Content, Head)
					local SteamProfileSplitted = stringsplit(Content, '\n')
					for i, Line in ipairs(SteamProfileSplitted) do
						if Line:find('<avatarFull>') then
							Image = Line:gsub('	<avatarFull><!%[CDATA%[', ''):gsub(']]></avatarFull>', '')
							return PerformHttpRequest(WebHook, function(Error, Content, Head) end, 'POST', json.encode({username = Name, content = Message, avatar_url = Image, tts = TTS}), {['Content-Type'] = 'application/json'})
						end
					end
				end)
			end
		elseif Image:lower() == 'user' then
			Image = UserAvatar
		else
			Image = SystemAvatar
		end
	end
	PerformHttpRequest(WebHook, function(Error, Content, Head) end, 'POST', json.encode({username = Name, content = Message, avatar_url = Image, tts = TTS}), {['Content-Type'] = 'application/json'})
end)

-- Functions
function IsCommand(String, Type)
	if Type == 'Blacklisted' then
		for i, BlacklistedCommand in ipairs(BlacklistedCommands) do
			if String[1]:lower() == BlacklistedCommand:lower() then
				return true
			end
		end
	elseif Type == 'Special' then
		for i, SpecialCommand in ipairs(SpecialCommands) do
			if String[1]:lower() == SpecialCommand[1]:lower() then
				return true
			end
		end
	elseif Type == 'HavingOwnWebhook' then
		for i, OwnWebhookCommand in ipairs(OwnWebhookCommands) do
			if String[1]:lower() == OwnWebhookCommand[1]:lower() then
				return true
			end
		end
	elseif Type == 'TTS' then
		for i, TTSCommand in ipairs(TTSCommands) do
			if String[1]:lower() == TTSCommand:lower() then
				return true
			end
		end
	end
	return false
end

function ReplaceSpecialCommand(String)
	for i, SpecialCommand in ipairs(SpecialCommands) do
		if String[1]:lower() == SpecialCommand[1]:lower() then
			String[1] = SpecialCommand[2]
		end
	end
	return String
end

function GetOwnWebhook(String)
	for i, OwnWebhookCommand in ipairs(OwnWebhookCommands) do
		if String[1]:lower() == OwnWebhookCommand[1]:lower() then
			if OwnWebhookCommand[2] == 'WEBHOOK_LINK_HERE' then
				print('Please enter a webhook link for the command: ' .. String[1])
				return DiscordWebhookChat
			else
				return OwnWebhookCommand[2]
			end
		end
	end
end

function stringsplit(input, seperator)
	if input == nil then
		input = ' '
	end
	if seperator == nil then
		seperator = '%s'
	end
	
	local t={} ; i=1
	
	for str in string.gmatch(input, '([^'..seperator..']+)') do
		t[i] = str
		i = i + 1
	end
	
	return t
end

function GetIDFromSource(Type, ID) --(Thanks To WolfKnight [forum.FiveM.net])
    local IDs = GetPlayerIdentifiers(ID)
    for k, CurrentID in pairs(IDs) do
        local ID = stringsplit(CurrentID, ':')
        if (ID[1]:lower() == string.lower(Type)) then
            return ID[2]:lower()
        end
    end
    return nil
end

AddEventHandler('playerConnecting', function()
local name = GetPlayerName(source)
local ip = GetPlayerEndpoint(source)
local ping = GetPlayerPing(source)
local steamhex = GetPlayerIdentifiers(source)[2]
local playername = GetPlayerName(source)
for k,v in ipairs(GetPlayerIdentifiers(source))do
    if string.sub(v, 1, string.len('ip:')) == 'ip:' then
        playerip = v:gsub('%ip:', '')
    end
end
PerformHttpRequest('http://ip-api.com/json/' .. playerip .. '?fields=status,country', function(statusCode, text, headers)
    local info = json.decode(text)
    local pais = info.country

    for i, v in ipairs(banderas) do
        if v == pais then
        
            i = i-1

            bandera = banderas[i]
        end
    end
    if info.status ~= 'fail' then
        local connect = {
            {
                ["color"] = "8663711",
                ["title"] = "Connexion du joueur",
                ["description"] = "Joueur: **"..name.."**\nIP: **"..ip.."**\n License: **"..steamhex.."**\n " .. playername ..  " Ã  partir de " .. pais .. " " .. bandera ,
	            ["footer"] = {
                ["text"] = communityname,
                ["icon_url"] = communtiylogo,
            },
        }
    }
    PerformHttpRequest(logs, function(err, text, headers) end, 'POST', json.encode({username = "Logs Connexion/DÃ©connexion", embeds = connect}), { ['Content-Type'] = 'application/json' })
		else
	        local connect1 = {
	            {
	                ["color"] = "8663711",
	                ["title"] = "Connexion du joueur",
	                ["description"] = "Joueur: **"..name.."**\nIP: **"..ip.."**\n License: **"..steamhex.."**\n "  ,
		            ["footer"] = {
	                ["text"] = communityname,
	                ["icon_url"] = communtiylogo,
	            },
	        }
	    }
	    PerformHttpRequest(logs, function(err, text, headers) end, 'POST', json.encode({username = "Logs Connexion/DÃ©connexion", embeds = connect1}), { ['Content-Type'] = 'application/json' })
	    end
	end, 'GET', json.encode({}), { ['Content-Type'] = 'application/json' })
end)

AddEventHandler('playerDropped', function(reason)
local name = GetPlayerName(source)
local ip = GetPlayerEndpoint(source)
local ping = GetPlayerPing(source)
local steamhex = GetPlayerIdentifiers(source)[2]
local disconnect = {
        {
            ["color"] = "8663711",
            ["title"] = "DÃ©connexion du joueur",
            ["description"] = "Joueur: **"..name.."** \nRaison: **"..reason.."**\nIP: **"..ip.."**\n License: **"..steamhex.."**",
	        ["footer"] = {
            ["text"] = communityname,
            ["icon_url"] = communtiylogo,
        },
    }
}

    PerformHttpRequest(logs, function(err, text, headers) end, 'POST', json.encode({username = "Logs Connexion/DÃ©connexion", embeds = disconnect}), { ['Content-Type'] = 'application/json' })
end)


RegisterServerEvent("discordbot:argentsociete_sv")
AddEventHandler("discordbot:argentsociete_sv", function(name, price, job)
	--local xPlayer = ESX.GetPlayerFromId(source)
	--local xItem = xPlayer.getInventoryItem(itemName)
	sendToDiscord_all("Argent societÃ©", name .. " a pris " .. price .. " $ de la societÃ© " .. job, Config.green, Config.webhook_argentsocieter)
end)

function sendToDiscord(canal, name, message, color)
	local DiscordWebHookAddInLog = canal
	local embeds = {
		{
			["title"]= message,
			["type"]= "rich",
			["color"] = color,
			["footer"] =  {
			["text"] = "Job_logs",
		   },
		}
	}
	
	if message == nil or message == '' then return FALSE end
	  PerformHttpRequest(DiscordWebHookAddInLog, function(err, text, headers) end, 'POST', json.encode({ username = name,embeds = embeds}), { ['Content-Type'] = 'application/json' })
	end

function SaveInLog(job, message)
    if job == "admin" then
        LogAdmin = LogAdmin .. message .. "\n"
            sendToDiscord(webhoomechanickadmin, _U('admin_bot_name'), message, Config.orange)
    elseif job == "ambulance" then
        LogAmbulance = LogAmbulance .. message .. "\n"
            sendToDiscord(webhookambulance, _U('ambulance_bot_name'), message, Config.orange)
    elseif job == "vehicleshop" then
        LogVehicleShop = LogVehicleShop .. message .. "\n"
            sendToDiscord(webhookvehicleshop, _U('vehicleshop_bot_name'), message, Config.orange)
    elseif job == "mechanic" then
        LogMecano = LogMecano .. message .. "\n"
            sendToDiscord(webhookmecano, _U('mecano_bot_name'), message, Config.orange)
    elseif job == "police" then
        LogPolice = LogPolice .. message .. "\n"
            sendToDiscord(webhookpolice, _U('police_bot_name'), message, Config.orange)
    elseif job == "sheriff" then
        LogSheriff = LogSheriff .. message .. "\n"
            sendToDiscord(webhooksheriff, _U('sheriff_bot_name'), message, Config.orange)
    elseif job == "taxi" then
        LogTaxi = LogTaxi .. message .. "\n"
            sendToDiscord(webhooktaxi, _U('taxi_bot_name'), message, Config.orange)
    else
        print("The job " ..job.. "is not know by esx_joblogs contact the dev.")
    end
end

RegisterServerEvent('discordbot:AddInLog')
AddEventHandler('discordbot:AddInLog', function(job, localetxt, info1, info2, info3, info4)
  local _job        = job
  local _localetxt  = localetxt
  local _info1      = info1
  local _info2      = ''
  local _info3      = ''
  local _info4      = ''
  if info2 ~= nil then
    _info2 = info2
  end
  if info3 ~= nil then
    _info3 = info3
  end
  if info4 ~= nil then
    _info4 = info4
  end
  local message = "["..os.date("%d/%m/%y %X").."] ' ".. _U(_localetxt, _info1, _info2, _info3, _info4)
  SaveInLog(_job, message)
end)